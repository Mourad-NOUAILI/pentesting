TOR_IP='127.0.0.1'
TOR_PORT=9150

MAX_RETRIES = 20

cnt = 0

import functools
import requests

try:
    import socks
except ImportError:
    print ("socks module is not installed")
    print ("https://pypi.python.org/pypi/PySocks")
    sys.exit(1)

try:
    import socket
except ImportError:
    print ("socket module is not installed")
    print ("pip install socket")
    sys.exit(1)

try:
    import stem
    from stem import Signal
    from stem.control import Controller, EventType
except ImportError:
    print ("stem module is not installed")
    print ("pip install stem")
    print ("or")
    print ("https://pypi.python.org/pypi/stem")
    sys.exit(1)

import time
import re
import sys

class bcolors:
    HEADER = '\033[95m'
    BLUE = '\033[94m'
    GREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

def bruteForce(s, l,ext):
    adapter = requests.adapters.HTTPAdapter(max_retries=MAX_RETRIES)
    s.mount('https://', adapter)
    s.mount('http://', adapter)

    l1 = l.replace('%EXT%',ext)
    link = sys.argv[1]+"/"+l1
    print (bcolors.BOLD + '\t' + sys.argv[1]+"/"+l1 + "..." + bcolors.ENDC, end='')

    statusCode = s.get(sys.argv[1]+"/"+l1).status_code
    if statusCode == 200:
        print(bcolors.GREEN + "[Bingo]" + bcolors.ENDC)
        while True:
            ans = input("\tContinue(Y/n) ?: ")
            ans = ans.lower()
            if ans == 'y' or ans == 'n':
                break
        if ans == 'n':
            sys.exit(1)
    else:
        print (bcolors.FAIL + "[Not found]" + bcolors.ENDC)
    global cnt
    cnt += 1
    if cnt % 10 == 0:
        renewConnection()
        s = getTorSession()
        ip = getIP(s)
        print ("\n\tYour IP: " + bcolors.GREEN + str(ip) + bcolors.ENDC)
    print("")

def renewConnection():
    try:
        with Controller.from_port(port = TOR_PORT) as controller:
            controller.authenticate(password = 'mayar')
            controller.signal(Signal.NEWNYM)
            streamListener = functools.partial(streamEvent, controller)
            controller.add_event_listener(streamListener, EventType.STREAM)
            time.sleep(3)
    except:
        print (bcolors.FAIL + "[Failed]" + bcolors.ENDC)
        print (bcolors.BOLD + "TOR is not enabled in your system. Or, check your Internet connection." + bcolors.ENDC)
        sys.exit(1)


def streamEvent(controller, event):
    if event.status == StreamStatus.SUCCEEDED and event.circ_id:
        circ = controller.get_circuit(event.circ_id)

        exit_fingerprint = circ.path[-1][0]
        exit_relay = controller.get_network_status(exit_fingerprint)

        print("Exit relay for our connection to %s" % (event.target))
        print("  address: %s:%i" % (exit_relay.address, exit_relay.or_port))
        print("  fingerprint: %s" % exit_relay.fingerprint)
        print("  nickname: %s" % exit_relay.nickname)
        print("  locale: %s" % controller.get_info("ip-to-country/%s" % exit_relay.address, 'unknown'))
        print("")

def getTorSession():
    session = requests.session()
    session.proxies = {'http':  'socks5://127.0.0.1:9050',
                       'https': 'socks5://127.0.0.1:9050'
                      }
    return session

def getIP(session):
    p = re.compile("\d+\.\d+\.\d+\.\d+")
    if session == None:
        with requests.Session() as c:
            try:
                r = c.get('http://httpbin.org/ip')
                m = p.search(str(r.content))
                if m:
                    ip = m.group()
                    return ip
            except:
                print(bcolors.FAIL +  "http://httpbin.org/ip not reachable !" + bcolors.ENDC)

    else:
        m = p.search(str(session.get("http://httpbin.org/ip").content))
        if m:
            ip = m.group()
            return ip



#Main
if __name__ == "__main__":
    try:
        ip = getIP(None)
        print (bcolors.BOLD + "Your real IP: " + bcolors.ENDC +
        bcolors.GREEN + str(ip)+ bcolors.ENDC + '\n')

        print ("[+] Connecting to TOR...", end='')
        renewConnection()
        print (bcolors.GREEN + "[Done]" + bcolors.ENDC)

        session = getTorSession()
        if session == None:
            print (bcolors.FAIL + "\nError: Can't get TOR session." + bcolors.ENDC)
            sys.exit(1)

        ip = getIP(session)
        print (bcolors.BOLD + "\tYour IP: " + bcolors.ENDC +
        bcolors.GREEN + str(ip)+ bcolors.ENDC + '\n')

        print ("[+] Searching for admin page...")
        try:
            f = open(sys.argv[2], "r")
        except:
            print ("No such file: " + sys.argv[2])
            sys.exit(1)

        while True:
            line = f.readline().strip("\n")
            if not line:
                break
            bruteForce(session, line,'php')
            bruteForce(session, line,'html')
            bruteForce(session, line,'htm')
    except KeyboardInterrupt:
        print (bcolors.FAIL + "\n\nProgram terminated by user !" + bcolors.ENDC)
        sys.exit(1)

#python adminFinder.py http://www.devillaestate.com admins.txt
